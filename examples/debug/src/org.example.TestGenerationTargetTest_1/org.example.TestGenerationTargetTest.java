/*
 * This file was automatically generated by EvoSuite
 * Mon May 08 20:31:57 CDT 2023
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import org.example.TestGenerationTarget;

public class TestGenerationTargetTest {

  @Test
  public void test00()  throws Throwable  {
      String string0 = null;
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "b'U$";
      TestGenerationTarget.isPalindrome(string1);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test01()  throws Throwable  {
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[7];
      int int0 = 1860;
      intArray0[0] = int0;
      int int1 = 67;
      intArray0[1] = int1;
      int int2 = 3225;
      intArray0[2] = int2;
      int int3 = 4;
      intArray0[3] = int3;
      int int4 = 1319;
      intArray0[4] = int4;
      int int5 = (-729);
      intArray0[5] = int5;
      int int6 = 2142;
      intArray0[6] = int6;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[7];
      int int7 = 4;
      intArray1[0] = int7;
      int int8 = 3311;
      intArray1[1] = int8;
      int int9 = 4100;
      intArray1[2] = int9;
      int int10 = (-1);
      intArray1[3] = int10;
      int int11 = 2249;
      intArray1[4] = int11;
      int int12 = 0;
      intArray1[5] = int12;
      int int13 = (-3252);
      intArray1[6] = int13;
      TestGenerationTarget.findMax(intArray1);
      int[] intArray2 = new int[5];
      int int14 = 2235;
      intArray2[0] = int14;
      int int15 = 3400;
      intArray2[1] = int15;
      int int16 = 793276299;
      intArray2[2] = int16;
      int int17 = 0;
      intArray2[3] = int17;
      int int18 = (-447);
      intArray2[4] = int18;
      TestGenerationTarget.findMax(intArray2);
      TestGenerationTarget.isPrime(int14);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      String string1 = ":7Oo:vbfe1YRU3|8[?";
      TestGenerationTarget.isPalindrome(string1);
  }

  @Test
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 2;
      intArray0[0] = int0;
      int int1 = TestGenerationTarget.findMax(intArray0);
      String string0 = "oayZB|,nhK';</a";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = int0;
      intArray1[1] = int0;
      intArray1[2] = int0;
      intArray1[3] = int0;
      intArray1[4] = int1;
      TestGenerationTarget.findMax(intArray1);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      int int2 = (-2);
      TestGenerationTarget.isPrime(int2);
      TestGenerationTarget.isPrime(intArray1[2]);
      TestGenerationTarget.isPrime(intArray1[0]);
      TestGenerationTarget.findMax(intArray1);
      int int3 = (-258);
      TestGenerationTarget.isPrime(int3);
      String string2 = "kTc\"er";
      TestGenerationTarget.isPalindrome(string2);
  }

  @Test
  public void test03()  throws Throwable  {
      int int0 = (-258);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[5];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      int int1 = (-738);
      intArray0[3] = int1;
      intArray0[4] = int0;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = int0;
      intArray1[1] = int0;
      intArray1[2] = int0;
      intArray1[3] = int0;
      int int2 = 895;
      intArray1[4] = int2;
      intArray1[5] = int0;
      TestGenerationTarget.findMax(intArray1);
      int int3 = 436;
      TestGenerationTarget.isPrime(int3);
      int[] intArray2 = new int[3];
      int int4 = (-420);
      intArray2[0] = int4;
      intArray2[1] = int3;
      intArray2[2] = int0;
      TestGenerationTarget.findMax(intArray2);
      TestGenerationTarget.isPrime(int0);
  }

  @Test
  public void test04()  throws Throwable  {
      int int0 = 6;
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[6];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test05()  throws Throwable  {
      String string0 = "mAz4.E";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test06()  throws Throwable  {
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[3];
      int int0 = (-1);
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = (-4867);
      intArray0[2] = int2;
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = (-661);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.isPrime(int0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[2];
      intArray0[0] = int0;
      intArray0[1] = int0;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget.findMax(intArray0);
      String string2 = "X[#pVlj";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.isPalindrome(string2);
      int int1 = 2543;
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test08()  throws Throwable  {
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[1];
      int int0 = 647;
      intArray0[0] = int0;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[4];
      int int1 = 591;
      intArray1[0] = int1;
      int int2 = (-116);
      intArray1[1] = int2;
      int int3 = 1759;
      intArray1[2] = int3;
      int int4 = (-447);
      intArray1[3] = int4;
      TestGenerationTarget.findMax(intArray1);
      String string0 = "SKG2WM BT`oCFW7#`RZ";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPrime(intArray1[2]);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      String string2 = "CA}";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test09()  throws Throwable  {
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      String string1 = null;
      TestGenerationTarget.isPalindrome(string1);
      int int0 = 4043;
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[8];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      int int1 = (-917);
      intArray0[4] = int1;
      intArray0[5] = int0;
      intArray0[6] = int0;
      intArray0[7] = int0;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int1);
      int int2 = 0;
      TestGenerationTarget.isPrime(int2);
      int int3 = 543;
      TestGenerationTarget.isPrime(int3);
      String string2 = "`#35v9q^1Ls56] ^@\\";
      TestGenerationTarget.isPalindrome(string2);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1239);
      TestGenerationTarget.isPrime(int0);
      int int1 = (-1777);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[7];
      intArray0[0] = int1;
      intArray0[1] = int0;
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int0;
      int int2 = 2502;
      intArray0[5] = int2;
      intArray0[6] = int1;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = int1;
      intArray1[1] = int1;
      intArray1[2] = int1;
      intArray1[3] = int0;
      intArray1[4] = int1;
      intArray1[5] = int0;
      intArray1[6] = int1;
      intArray1[7] = int0;
      intArray1[8] = int1;
      TestGenerationTarget.findMax(intArray1);
      int[] intArray2 = new int[1];
      intArray2[0] = int1;
      TestGenerationTarget.findMax(intArray2);
      int int3 = 1165;
      TestGenerationTarget.isPrime(int3);
      int int4 = 1022;
      TestGenerationTarget.isPrime(int4);
      TestGenerationTarget.findMax(intArray2);
      int int5 = 101;
      TestGenerationTarget.isPrime(int5);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = "$%PNS,";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[2];
      int int0 = (-1842870664);
      intArray0[0] = int0;
      int int1 = 1;
      intArray0[1] = int1;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[2];
      int int2 = (-1195);
      intArray1[0] = int2;
      int int3 = (-1834);
      intArray1[1] = int3;
      TestGenerationTarget.findMax(intArray1);
      int[] intArray2 = new int[3];
      int int4 = (-1);
      intArray2[0] = int4;
      int int5 = (-2078140044);
      intArray2[1] = int5;
      int int6 = 1;
      intArray2[2] = int6;
      TestGenerationTarget.findMax(intArray2);
      int int7 = 0;
      TestGenerationTarget.isPrime(int7);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      String string2 = "<";
      TestGenerationTarget.isPalindrome(string2);
      int int8 = 839;
      TestGenerationTarget.isPrime(int8);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-1892685218);
      int int1 = (-1208);
      int int2 = 35;
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int int3 = 9;
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.isPrime(int3);
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.isPrime(int0);
      String string0 = "Z";
      TestGenerationTarget.isPalindrome(string0);
      int int1 = 16;
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[7];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int1;
      intArray0[5] = int0;
      intArray0[6] = int1;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[5]);
      TestGenerationTarget.isPrime(intArray0[4]);
      String string1 = "s8pr1zPT-%q";
      TestGenerationTarget.isPalindrome(string1);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }
}
