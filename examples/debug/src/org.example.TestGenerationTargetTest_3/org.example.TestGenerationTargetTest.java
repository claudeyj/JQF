/*
 * This file was automatically generated by EvoSuite
 * Mon May 08 20:32:19 CDT 2023
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import org.example.TestGenerationTarget;

public class TestGenerationTargetTest {

  @Test
  public void test00()  throws Throwable  {
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[9];
      int int0 = (-1);
      intArray0[0] = int0;
      int int1 = 2;
      intArray0[1] = int1;
      int int2 = (-508);
      intArray0[2] = int2;
      int int3 = 1327;
      intArray0[3] = int3;
      int int4 = 2;
      intArray0[4] = int4;
      int int5 = (-1);
      intArray0[5] = int5;
      int int6 = 5125;
      intArray0[6] = int6;
      int int7 = 4146;
      intArray0[7] = int7;
      int int8 = (-1);
      intArray0[8] = int8;
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 2;
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[7];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      int int1 = (-2);
      intArray0[3] = int1;
      intArray0[4] = int0;
      intArray0[5] = int0;
      intArray0[6] = int0;
      int int2 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int3 = (-1);
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.findMax(intArray0);
      int int4 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[0]);
      int int5 = (-474);
      TestGenerationTarget.isPrime(int5);
      String string0 = "';</aMKNe^z(Pe&m";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPalindrome(string0);
      int int6 = 7;
      TestGenerationTarget.isPrime(int6);
      int[] intArray1 = new int[9];
      intArray1[0] = int0;
      intArray1[1] = int1;
      intArray1[2] = int4;
      int int7 = (-1920);
      intArray1[3] = int7;
      intArray1[4] = int2;
      intArray1[5] = int0;
      intArray1[6] = int2;
      int int8 = (-5741);
      intArray1[7] = int8;
      intArray1[8] = int4;
      TestGenerationTarget.findMax(intArray1);
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = "^i5a@s=kInokV";
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test03()  throws Throwable  {
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[9];
      int int0 = 5;
      intArray0[0] = int0;
      int int1 = (-2744);
      intArray0[1] = int1;
      int int2 = 2;
      intArray0[2] = int2;
      int int3 = (-3775);
      intArray0[3] = int3;
      int int4 = 1209;
      intArray0[4] = int4;
      int int5 = 465;
      intArray0[5] = int5;
      int int6 = (-1);
      intArray0[6] = int6;
      int int7 = 1;
      intArray0[7] = int7;
      int int8 = 8;
      intArray0[8] = int8;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[4];
      int int9 = (-1784);
      intArray1[0] = int9;
      int int10 = 6;
      intArray1[1] = int10;
      int int11 = 2499;
      intArray1[2] = int11;
      int int12 = 8;
      intArray1[3] = int12;
      TestGenerationTarget.findMax(intArray1);
      int[] intArray2 = null;
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test04()  throws Throwable  {
      int int0 = 2;
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[7];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      int int1 = (-2);
      intArray0[3] = int1;
      intArray0[4] = int0;
      intArray0[5] = int0;
      intArray0[6] = int0;
      int int2 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int3 = (-1);
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.findMax(intArray0);
      int int4 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[0]);
      int int5 = (-474);
      TestGenerationTarget.isPrime(int5);
      String string0 = "';</aMKNe^z(Pe&m";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPalindrome(string0);
      int int6 = 7;
      TestGenerationTarget.isPrime(int6);
      int[] intArray1 = new int[9];
      intArray1[0] = int0;
      intArray1[1] = int1;
      intArray1[2] = int4;
      int int7 = (-1920);
      intArray1[3] = int7;
      intArray1[4] = int2;
      intArray1[5] = int0;
      intArray1[6] = int2;
      int int8 = (-5741);
      intArray1[7] = int8;
      intArray1[8] = int4;
      TestGenerationTarget.findMax(intArray1);
  }

  @Test
  public void test05()  throws Throwable  {
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[5];
      int int0 = 1476;
      intArray0[0] = int0;
      int int1 = (-1);
      intArray0[1] = int1;
      int int2 = 2630;
      intArray0[2] = int2;
      int int3 = 9;
      intArray0[3] = int3;
      int int4 = (-2744);
      intArray0[4] = int4;
      TestGenerationTarget.findMax(intArray0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int5 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      String string2 = "";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.isPrime(intArray0[0]);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int5);
      int int6 = (-491);
      TestGenerationTarget.isPrime(int6);
  }

  @Test
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 3461;
      intArray0[0] = int0;
      int int1 = (-1629);
      intArray0[1] = int1;
      int int2 = (-2104776148);
      intArray0[2] = int2;
      int int3 = (-1);
      intArray0[3] = int3;
      int int4 = 1308;
      intArray0[4] = int4;
      int int5 = 109;
      intArray0[5] = int5;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      String string0 = "^z(Pe&m2>bZ9Ij|J3E{";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.findMax(intArray0);
      String string1 = "c\"er6";
      TestGenerationTarget.isPalindrome(string1);
      String string2 = null;
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget.isPrime(intArray0[5]);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int6 = (-3775);
      TestGenerationTarget.isPrime(int6);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[0]);
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = (-1088);
      TestGenerationTarget.isPrime(int0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int int1 = (-3086);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.isPrime(int1);
      String string1 = ")f3mHDTD$m2R";
      TestGenerationTarget.isPalindrome(string1);
      int[] intArray0 = new int[6];
      intArray0[0] = int1;
      intArray0[1] = int1;
      intArray0[2] = int0;
      intArray0[3] = int1;
      intArray0[4] = int1;
      intArray0[5] = int1;
      TestGenerationTarget.findMax(intArray0);
      String string2 = "";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.findMax(intArray0);
      String string3 = "";
      TestGenerationTarget.isPalindrome(string3);
  }

  @Test
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 0;
      intArray0[0] = int0;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      String string1 = null;
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPrime(intArray0[0]);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPalindrome(string0);
  }

  @Test
  public void test09()  throws Throwable  {
      String string0 = "ix 7E==j";
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[9];
      int int0 = 16;
      intArray0[0] = int0;
      int int1 = (-164);
      intArray0[1] = int1;
      int int2 = (-3185);
      intArray0[2] = int2;
      int int3 = (-2295);
      intArray0[3] = int3;
      int int4 = 1412;
      intArray0[4] = int4;
      int int5 = (-439062815);
      intArray0[5] = int5;
      int int6 = (-1087);
      intArray0[6] = int6;
      int int7 = (-4122);
      intArray0[7] = int7;
      int int8 = 366;
      intArray0[8] = int8;
      TestGenerationTarget.findMax(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = int4;
      intArray1[1] = int5;
      intArray1[2] = int4;
      TestGenerationTarget.findMax(intArray1);
      int int9 = 16;
      TestGenerationTarget.isPrime(int9);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray1);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 4;
      TestGenerationTarget.isPrime(int0);
      String string0 = "DCiIB4N>~`4oQTITn";
      TestGenerationTarget.isPalindrome(string0);
      int int1 = 0;
      TestGenerationTarget.isPrime(int1);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = "Am?ccB`BRh`";
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[3];
      int int0 = 381;
      intArray0[0] = int0;
      int int1 = (-2066226265);
      intArray0[1] = int1;
      int int2 = (-1858);
      intArray0[2] = int2;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[1]);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[1]);
      String string2 = "=G#\"g\"ESj<UC$iA=";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.findMax(intArray0);
      String string3 = "";
      TestGenerationTarget.isPalindrome(string3);
  }
}
