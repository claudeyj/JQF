/*
 * This file was automatically generated by EvoSuite
 * Mon May 08 20:32:30 CDT 2023
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import org.example.TestGenerationTarget;

public class TestGenerationTargetTest {

  @Test
  public void test00()  throws Throwable  {
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[9];
      int int0 = 2930;
      intArray0[0] = int0;
      int int1 = (-99);
      intArray0[1] = int1;
      int int2 = (-1);
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = 2946;
      intArray0[4] = int4;
      int int5 = 2511;
      intArray0[5] = int5;
      int int6 = 1;
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      int int8 = 1975;
      intArray0[8] = int8;
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test01()  throws Throwable  {
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray0 = new int[7];
      int int0 = (-2038069180);
      intArray0[0] = int0;
      int int1 = (-172);
      intArray0[1] = int1;
      int int2 = 4017;
      intArray0[2] = int2;
      int int3 = (-1);
      intArray0[3] = int3;
      int int4 = 3612;
      intArray0[4] = int4;
      int int5 = (-2063686124);
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      TestGenerationTarget.findMax(intArray0);
      int int7 = 2;
      TestGenerationTarget.isPrime(int7);
      int[] intArray1 = new int[6];
      intArray1[0] = int7;
      intArray1[1] = int7;
      intArray1[2] = int7;
      intArray1[3] = int7;
      intArray1[4] = int7;
      intArray1[5] = int7;
      TestGenerationTarget.findMax(intArray1);
  }

  @Test
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-1784);
      intArray0[0] = int0;
      int int1 = 19;
      intArray0[1] = int1;
      int int2 = 1;
      intArray0[2] = int2;
      int int3 = 2499;
      intArray0[3] = int3;
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 957;
      intArray0[2] = int2;
      TestGenerationTarget.findMax(intArray0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int3 = (-1);
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.findMax(intArray0);
      int int4 = 793276299;
      TestGenerationTarget.isPrime(int4);
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "A`g }RhhoayZB|";
      TestGenerationTarget.isPalindrome(string1);
      int int5 = 0;
      TestGenerationTarget.isPrime(int5);
      TestGenerationTarget.isPalindrome(string0);
      String string2 = "";
      TestGenerationTarget.isPalindrome(string2);
  }

  @Test
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 4768;
      intArray0[1] = int1;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int2 = 1578;
      TestGenerationTarget.isPrime(int2);
      TestGenerationTarget.findMax(intArray0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      String string2 = "/Tiq`2<[0-<6gepm";
      TestGenerationTarget.isPalindrome(string2);
  }

  @Test
  public void test05()  throws Throwable  {
      String string0 = "mAz4.E";
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      int[] intArray0 = new int[1];
      int int0 = 109;
      intArray0[0] = int0;
      int int1 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(intArray0[0]);
      TestGenerationTarget.isPalindrome(string1);
      int[] intArray1 = new int[7];
      intArray1[0] = int1;
      intArray1[1] = int1;
      intArray1[2] = int1;
      intArray1[3] = int1;
      intArray1[4] = int1;
      intArray1[5] = int0;
      intArray1[6] = int1;
      TestGenerationTarget.findMax(intArray1);
  }

  @Test
  public void test06()  throws Throwable  {
      String string0 = null;
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPalindrome(string0);
      String string1 = "b'U$";
      TestGenerationTarget.isPalindrome(string1);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = (-862);
      TestGenerationTarget.isPrime(int0);
      String string0 = "XF>'\\Z=Fx 6tG8";
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[6];
      intArray0[0] = int0;
      intArray0[1] = int0;
      int int1 = (-1);
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int2 = 4768;
      TestGenerationTarget.isPrime(int2);
      TestGenerationTarget.isPrime(intArray0[4]);
      String string1 = null;
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget.isPalindrome(string1);
      String string2 = "y\"uz0]N~eqmT@DO";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.isPrime(int1);
  }

  @Test
  public void test08()  throws Throwable  {
      int int0 = (-661);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.isPrime(int0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int[] intArray0 = new int[2];
      intArray0[0] = int0;
      intArray0[1] = int0;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      TestGenerationTarget.findMax(intArray0);
      String string2 = "X[#pVlj";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.isPalindrome(string2);
      int int1 = 2543;
      TestGenerationTarget.isPrime(int1);
  }

  @Test
  public void test09()  throws Throwable  {
      int int0 = (-2024264511);
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[9];
      intArray0[0] = int0;
      int int1 = 2;
      intArray0[1] = int1;
      int int2 = (-2570);
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      intArray0[4] = int0;
      intArray0[5] = int0;
      intArray0[6] = int0;
      intArray0[7] = int0;
      intArray0[8] = int0;
      int int4 = TestGenerationTarget.findMax(intArray0);
      String string0 = "p]g}WJZb\\4j";
      TestGenerationTarget.isPalindrome(string0);
      int int5 = TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      int[] intArray1 = new int[8];
      intArray1[0] = int0;
      intArray1[1] = int2;
      intArray1[2] = int1;
      intArray1[3] = int0;
      intArray1[4] = int5;
      int int6 = (-1959572174);
      intArray1[5] = int6;
      intArray1[6] = int3;
      intArray1[7] = int4;
      TestGenerationTarget.findMax(intArray1);
      TestGenerationTarget.findMax(intArray0);
      int[] intArray2 = null;
      // Undeclared exception!
      try { 
        TestGenerationTarget.findMax(intArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be null or empty
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-2147406806);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.isPrime(int0);
      String string0 = ">T#7oTqu1W=";
      TestGenerationTarget.isPalindrome(string0);
      int int1 = 1;
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[1];
      intArray0[0] = int1;
      TestGenerationTarget.findMax(intArray0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      int int2 = (-1);
      TestGenerationTarget.isPrime(int2);
      String string2 = "&";
      TestGenerationTarget.isPalindrome(string2);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.isPalindrome(string1);
      String string3 = "@?P<1We]*cKiyc0n";
      TestGenerationTarget.isPalindrome(string3);
      int int3 = (-1);
      TestGenerationTarget.isPrime(int3);
      TestGenerationTarget.findMax(intArray0);
      String string4 = "";
      TestGenerationTarget.isPalindrome(string4);
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      TestGenerationTarget.isPrime(int0);
      int[] intArray0 = new int[1];
      intArray0[0] = int0;
      TestGenerationTarget.findMax(intArray0);
      int int1 = 0;
      TestGenerationTarget.isPrime(int1);
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 1415;
      intArray0[1] = int1;
      int int2 = (-2071942946);
      intArray0[2] = int2;
      int int3 = 13;
      intArray0[3] = int3;
      int int4 = 340;
      intArray0[4] = int4;
      int int5 = 0;
      intArray0[5] = int5;
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int6 = (-648);
      TestGenerationTarget.isPrime(int6);
      String string0 = null;
      TestGenerationTarget.isPalindrome(string0);
      TestGenerationTarget.findMax(intArray0);
      TestGenerationTarget.findMax(intArray0);
      int int7 = 1423;
      TestGenerationTarget.isPrime(int7);
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test13()  throws Throwable  {
      String string0 = "a#!zC.TVTm";
      TestGenerationTarget.isPalindrome(string0);
      int int0 = 3119;
      TestGenerationTarget.isPrime(int0);
      String string1 = "";
      TestGenerationTarget.isPalindrome(string1);
      int int1 = (-1325);
      TestGenerationTarget.isPrime(int1);
      int int2 = 1;
      TestGenerationTarget.isPrime(int2);
      String string2 = "#u?@d>NQxXX";
      TestGenerationTarget.isPalindrome(string2);
      int[] intArray0 = new int[6];
      intArray0[0] = int2;
      intArray0[1] = int2;
      intArray0[2] = int2;
      intArray0[3] = int2;
      intArray0[4] = int2;
      intArray0[5] = int0;
      TestGenerationTarget.findMax(intArray0);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 3727;
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget.isPrime(int0);
      TestGenerationTarget testGenerationTarget0 = new TestGenerationTarget();
      TestGenerationTarget.isPrime(int0);
      int int1 = (-1833891193);
      TestGenerationTarget.isPrime(int1);
  }

  @Test
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-1892685218);
      intArray0[0] = int0;
      int int1 = (-1208);
      intArray0[1] = int1;
      int int2 = (-1095);
      intArray0[2] = int2;
      int int3 = 35;
      intArray0[3] = int3;
      TestGenerationTarget.findMax(intArray0);
      String string0 = "";
      TestGenerationTarget.isPalindrome(string0);
      int int4 = 9;
      TestGenerationTarget.isPrime(int4);
      int int5 = (-1);
      TestGenerationTarget.isPrime(int5);
  }
}
